generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  description     String      @default("")
  price           Float
  discountPercent Float       @default(0)
  stock           Int
  category        String
  slug            String
  discountPrice   Float
  imageUrl        String      @default("")
  isPublished     Boolean     @default(false)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  OrderItem       OrderItem[]
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  googleId    String?  @unique
  name        String
  email       String   @unique
  isAdmin     Boolean  @default(false)
  street      String?
  city        String?
  state       String?
  postalCode  String?
  country     String?
  phonenumber String?
  Orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Order {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  paymentMethod     PaymentMethod   @default(COD)
  razorpayOrderId   String?
  razorpayPaymentId String?
  status            OrderStatus     @default(PENDING)
  totalAmount       Float
  orderItems        OrderItem[]
  deliveryStatus    DeliveryStatus  @default(PENDING)
  shippingAddress   ShippingAddress @relation(fields: [shippingAddressId], references: [id])
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  shippingAddressId String          @db.ObjectId
}

model OrderItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String   @db.ObjectId
  order     Order    @relation(fields: [orderId], references: [id])
  productId String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int      @default(1)
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ShippingAddress {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  orderId     String   @db.ObjectId
  street      String
  city        String
  state       String
  postalCode  String
  country     String
  phonenumber String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Order       Order[]
}

enum PaymentMethod {
  COD
  ONLINE
}

enum OrderStatus {
  PENDING
  PROCESSING
  COMPLETED
  CANCELLED
}

enum DeliveryStatus {
  PENDING
  SHIPPED
  OUT_FOR_DELIVERY
  DELIVERED
}
